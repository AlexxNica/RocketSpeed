// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#include "NativeSubscriptionStorage.hpp"  // my header
#include "HString.hpp"
#include "NativeStorageType.hpp"

namespace djinni_generated {

jobject NativeSubscriptionStorage::toJava(JNIEnv* jniEnv, ::rocketspeed::djinni::SubscriptionStorage c) {
    djinni::LocalRef<jobject> j_type(jniEnv, NativeStorageType::toJava(jniEnv, c.type));
    djinni::LocalRef<jstring> j_file_path(jniEnv, ::djinni::HString::toJava(jniEnv, c.file_path));
    const auto & data = djinni::JniClass<::djinni_generated::NativeSubscriptionStorage>::get();
    jobject r = jniEnv->NewObject(data.clazz.get(), data.jconstructor, j_type.get(), j_file_path.get());
    djinni::jniExceptionCheck(jniEnv);
    return r;
}

::rocketspeed::djinni::SubscriptionStorage NativeSubscriptionStorage::fromJava(JNIEnv* jniEnv, jobject j) {
    assert(j != nullptr);
    const auto & data = djinni::JniClass<::djinni_generated::NativeSubscriptionStorage>::get();
    return ::rocketspeed::djinni::SubscriptionStorage(
        NativeStorageType::fromJava(jniEnv, djinni::LocalRef<jobject>(jniEnv, jniEnv->GetObjectField(j, data.field_type)).get()),
        ::djinni::HString::fromJava(jniEnv, djinni::LocalRef<jstring>(jniEnv, static_cast<jstring>(jniEnv->GetObjectField(j, data.field_filePath))).get()));
}

}  // namespace djinni_generated
