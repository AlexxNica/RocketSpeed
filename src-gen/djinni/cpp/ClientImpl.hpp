// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "src-gen/djinni/cpp/HostId.hpp"
#include "src-gen/djinni/cpp/LogLevel.hpp"
#include "src-gen/djinni/cpp/MsgId.hpp"
#include "src-gen/djinni/cpp/SubscriptionParameters.hpp"
#include "src-gen/djinni/cpp/SubscriptionStorage.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace rocketspeed { namespace djinni {

class MessageReceivedCallback;
class PublishCallback;
class SnapshotCallback;
class SubscribeCallback;

class ClientImpl {
public:
    virtual ~ClientImpl() {}

    static std::shared_ptr<ClientImpl> Create(LogLevel log_level, HostId cockpit, SubscriptionStorage storage);

    virtual MsgId Publish(int32_t tenant_id, std::string namespace_id, std::string topic_name, std::vector<uint8_t> data, std::shared_ptr<PublishCallback> publish_cb, MsgId message_id) = 0;

    virtual int64_t Subscribe(int32_t tenant_id, std::string namespace_id, std::string topic_name, int64_t start_seqno, std::shared_ptr<MessageReceivedCallback> deliver_cb, std::shared_ptr<SubscribeCallback> subscribe_cb) = 0;

    virtual int64_t Resubscribe(SubscriptionParameters params, std::shared_ptr<MessageReceivedCallback> deliver_cb, std::shared_ptr<SubscribeCallback> subscribe_cb) = 0;

    virtual void Unsubscribe(int64_t sub_handle) = 0;

    virtual void Acknowledge(int64_t sub_handle, int64_t seqno) = 0;

    virtual void SaveSubscriptions(std::shared_ptr<SnapshotCallback> snapshot_cb) = 0;

    virtual std::vector<SubscriptionParameters> RestoreSubscriptions() = 0;

    virtual void Close() = 0;
};

} }  // namespace rocketspeed::djinni
