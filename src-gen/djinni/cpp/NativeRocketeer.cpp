// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#include "src-gen/djinni/cpp/NativeRocketeer.hpp"  // my header
#include "Marshal.hpp"
#include "src-gen/djinni/cpp/NativeInboundID.hpp"
#include "src-gen/djinni/cpp/NativeSubscriptionParameters.hpp"

namespace djinni_generated {

NativeRocketeer::NativeRocketeer() : ::djinni::JniInterface<::rocketspeed::djinni::Rocketeer, NativeRocketeer>() {}

NativeRocketeer::~NativeRocketeer() = default;

NativeRocketeer::JavaProxy::JavaProxy(JniType j) : JavaProxyCacheEntry(j) { }

NativeRocketeer::JavaProxy::~JavaProxy() = default;

void NativeRocketeer::JavaProxy::HandleNewSubscription(::rocketspeed::djinni::InboundID inbound_id, ::rocketspeed::djinni::SubscriptionParameters params) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRocketeer>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_handleNewSubscription,
                           ::djinni_generated::NativeInboundID::fromCpp(jniEnv, inbound_id).get(),
                           ::djinni_generated::NativeSubscriptionParameters::fromCpp(jniEnv, params).get());
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeRocketeer::JavaProxy::HandleTermination(::rocketspeed::djinni::InboundID inbound_id, bool from_client) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRocketeer>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_handleTermination,
                           ::djinni_generated::NativeInboundID::fromCpp(jniEnv, inbound_id).get(),
                           ::djinni::Bool::fromCpp(jniEnv, from_client));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
