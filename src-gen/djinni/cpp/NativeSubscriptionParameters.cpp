// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#include "src-gen/djinni/cpp/NativeSubscriptionParameters.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeSubscriptionParameters::NativeSubscriptionParameters() = default;

NativeSubscriptionParameters::~NativeSubscriptionParameters() = default;

auto NativeSubscriptionParameters::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeSubscriptionParameters>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::I32::fromCpp(jniEnv, c.tenant_id),
                                                           ::djinni::String::fromCpp(jniEnv, c.namespace_id).get(),
                                                           ::djinni::String::fromCpp(jniEnv, c.topic_name).get(),
                                                           ::djinni::I64::fromCpp(jniEnv, c.start_seqno))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeSubscriptionParameters::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeSubscriptionParameters>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_tenantId)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_namespaceId)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_topicName)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_startSeqno))};
}

}  // namespace djinni_generated
