// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#include "src-gen/djinni/cpp/NativeSubscriptionStorage.hpp"  // my header
#include "Marshal.hpp"
#include "src-gen/djinni/cpp/NativeStorageType.hpp"

namespace djinni_generated {

NativeSubscriptionStorage::NativeSubscriptionStorage() = default;

NativeSubscriptionStorage::~NativeSubscriptionStorage() = default;

auto NativeSubscriptionStorage::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeSubscriptionStorage>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni_generated::NativeStorageType::fromCpp(jniEnv, c.type).get(),
                                                           ::djinni::String::fromCpp(jniEnv, c.file_path).get())};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeSubscriptionStorage::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 3);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeSubscriptionStorage>::get();
    return {::djinni_generated::NativeStorageType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_type)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_filePath))};
}

}  // namespace djinni_generated
