// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "src-gen/djinni/cpp/ConfigurationImpl.hpp"
#include "src-gen/djinni/cpp/LogLevel.hpp"
#include "src-gen/djinni/cpp/Status.hpp"
#include <cstdint>
#include <memory>
#include <vector>

namespace rocketspeed { namespace djinni {

class DisconnectCallback;
class MessageCallback;

class ProxyImpl {
public:
    virtual ~ProxyImpl() {}

    static std::shared_ptr<ProxyImpl> Create(LogLevel log_level, ConfigurationImpl config, int32_t num_workers);

    virtual Status Start(std::shared_ptr<MessageCallback> message_callback, std::shared_ptr<DisconnectCallback> disconnect_callback) = 0;

    virtual Status Forward(std::vector<uint8_t> message, int64_t session) = 0;

    virtual void DestroySession(int64_t session) = 0;

    virtual void Close() = 0;
};

} }  // namespace rocketspeed::djinni
