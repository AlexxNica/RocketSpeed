// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "src-gen/djinni/cpp/InboundID.hpp"
#include "src-gen/djinni/cpp/LogLevel.hpp"
#include "src-gen/djinni/cpp/Status.hpp"
#include <cstdint>
#include <memory>
#include <vector>

namespace rocketspeed { namespace djinni {

class Rocketeer;

class RocketeerServerImpl {
public:
    virtual ~RocketeerServerImpl() {}

    static std::shared_ptr<RocketeerServerImpl> Create(LogLevel log_level, int32_t listener_port);

    virtual void Register(std::shared_ptr<Rocketeer> rocketeer) = 0;

    virtual Status Start() = 0;

    virtual bool Deliver(InboundID inbound_id, int64_t seqno, std::vector<uint8_t> payload) = 0;

    virtual bool Terminate(InboundID inbound_id) = 0;

    virtual void Close() = 0;
};

} }  // namespace rocketspeed::djinni
