// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#include "src-gen/djinni/cpp/jni/NativeMessageCallback.hpp"  // my header
#include "HBinary.hpp"
#include "HI64.hpp"

namespace djinni_generated {

NativeMessageCallback::NativeMessageCallback() : djinni::JniInterface<::rocketspeed::djinni::MessageCallback, NativeMessageCallback>() {}

NativeMessageCallback::JavaProxy::JavaProxy(jobject obj) : JavaProxyCacheEntry(obj) {}

void NativeMessageCallback::JavaProxy::JavaProxy::Call(int64_t c_session_id, std::vector<uint8_t> c_message) {
    JNIEnv * const jniEnv = djinni::jniGetThreadEnv();
    djinni::JniLocalScope jscope(jniEnv, 10);
    jlong j_session_id = ::djinni::HI64::Unboxed::toJava(jniEnv, c_session_id);
    djinni::LocalRef<jbyteArray> j_message(jniEnv, ::djinni::HBinary::toJava(jniEnv, c_message));
    const auto & data = djinni::JniClass<::djinni_generated::NativeMessageCallback>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_call, j_session_id, j_message.get());
    djinni::jniExceptionCheck(jniEnv);
};

}  // namespace djinni_generated
