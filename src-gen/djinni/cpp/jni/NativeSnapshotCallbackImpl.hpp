// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "djinni_support.hpp"
#include "src-gen/djinni/cpp/SnapshotCallbackImpl.hpp"

namespace djinni_generated {

class NativeSnapshotCallbackImpl final : djinni::JniInterface<::rocketspeed::djinni::SnapshotCallbackImpl, NativeSnapshotCallbackImpl> {
public:
    using CppType = std::shared_ptr<::rocketspeed::djinni::SnapshotCallbackImpl>;
    using JniType = jobject;

    static jobject toJava(JNIEnv* jniEnv, std::shared_ptr<::rocketspeed::djinni::SnapshotCallbackImpl> c) { return djinni::JniClass<::djinni_generated::NativeSnapshotCallbackImpl>::get()._toJava(jniEnv, c); }
    static std::shared_ptr<::rocketspeed::djinni::SnapshotCallbackImpl> fromJava(JNIEnv* jniEnv, jobject j) { return djinni::JniClass<::djinni_generated::NativeSnapshotCallbackImpl>::get()._fromJava(jniEnv, j); }

    const djinni::GlobalRef<jclass> clazz { djinni::jniFindClass("org/rocketspeed/SnapshotCallbackImpl") };
    const jmethodID method_Call { djinni::jniGetMethodID(clazz.get(), "Call", "(Lorg/rocketspeed/Status;)V") };

    class JavaProxy final : djinni::JavaProxyCacheEntry, public ::rocketspeed::djinni::SnapshotCallbackImpl {
    public:
        JavaProxy(jobject obj);
        virtual void Call(::rocketspeed::djinni::Status status) override;

    private:
        using djinni::JavaProxyCacheEntry::getGlobalRef;
        friend class djinni::JniInterface<::rocketspeed::djinni::SnapshotCallbackImpl, ::djinni_generated::NativeSnapshotCallbackImpl>;
        friend class djinni::JavaProxyCache<JavaProxy>;
    };

private:
    NativeSnapshotCallbackImpl();
    friend class djinni::JniClass<::djinni_generated::NativeSnapshotCallbackImpl>;
};

}  // namespace djinni_generated
