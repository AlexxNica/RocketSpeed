// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "SubscribeCallbackImpl.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeSubscribeCallbackImpl final : djinni::JniInterface<::rocketspeed::djinni::SubscribeCallbackImpl, NativeSubscribeCallbackImpl> {
public:
    using CppType = std::shared_ptr<::rocketspeed::djinni::SubscribeCallbackImpl>;
    using JniType = jobject;

    static jobject toJava(JNIEnv* jniEnv, std::shared_ptr<::rocketspeed::djinni::SubscribeCallbackImpl> c) { return djinni::JniClass<::djinni_generated::NativeSubscribeCallbackImpl>::get()._toJava(jniEnv, c); }
    static std::shared_ptr<::rocketspeed::djinni::SubscribeCallbackImpl> fromJava(JNIEnv* jniEnv, jobject j) { return djinni::JniClass<::djinni_generated::NativeSubscribeCallbackImpl>::get()._fromJava(jniEnv, j); }

    const djinni::GlobalRef<jclass> clazz { djinni::jniFindClass("org/rocketspeed/SubscribeCallbackImpl") };
    const jmethodID method_Call { djinni::jniGetMethodID(clazz.get(), "Call", "(Lorg/rocketspeed/Status;ILjava/lang/String;JZ)V") };

    class JavaProxy final : djinni::JavaProxyCacheEntry, public ::rocketspeed::djinni::SubscribeCallbackImpl {
    public:
        JavaProxy(jobject obj);
        virtual void Call(::rocketspeed::djinni::Status status, int32_t namespace_id, std::string topic_name, int64_t sequence_number, bool subscribed) override;

    private:
        using djinni::JavaProxyCacheEntry::getGlobalRef;
        friend class djinni::JniInterface<::rocketspeed::djinni::SubscribeCallbackImpl, ::djinni_generated::NativeSubscribeCallbackImpl>;
        friend class djinni::JavaProxyCache<JavaProxy>;
    };

private:
    NativeSubscribeCallbackImpl();
    friend class djinni::JniClass<::djinni_generated::NativeSubscribeCallbackImpl>;
};

}  // namespace djinni_generated
