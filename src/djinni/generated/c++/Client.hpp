// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "MsgId.hpp"
#include "NamespaceID.hpp"
#include "SubscriptionPair.hpp"
#include "Topic.hpp"
#include "TopicOptions.hpp"
#include <cstdint>
#include <memory>
#include <vector>

namespace rocketglue {

class Configuration;
class MessageReceivedCallback;
class PublishCallback;
class SubscribeCallback;

/**
 * The RocketSpeed Client object.
 * Implemented in c++ and called from Java and ObjC
 */
class Client {
public:
    virtual ~Client() {}

    virtual void Open(const std::shared_ptr<Configuration> & config, const std::shared_ptr<PublishCallback> & publish_callback, const std::shared_ptr<SubscribeCallback> & subscribe_callback, const std::shared_ptr<MessageReceivedCallback> & receive_callback) = 0;

    virtual void Publish(const Topic & topic_name, const NamespaceID & namespace_id, const TopicOptions & options, const std::vector<uint8_t> & data, const MsgId & msgid) = 0;

    virtual void ListenTopics(const std::vector<SubscriptionPair> & names, const TopicOptions & options) = 0;
};

}  // namespace rocketglue
