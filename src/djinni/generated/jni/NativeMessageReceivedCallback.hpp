// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#pragma once

#include "MessageReceivedCallback.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeMessageReceivedCallback final : djinni::JniInterfaceJavaExt<::rocketglue::MessageReceivedCallback, NativeMessageReceivedCallback> {
public:
    using CppType = std::shared_ptr<::rocketglue::MessageReceivedCallback>;
    using JniType = jobject;

    static std::shared_ptr<::rocketglue::MessageReceivedCallback> fromJava(JNIEnv* jniEnv, jobject j) { return djinni::JniClass<::djinni_generated::NativeMessageReceivedCallback>::get()._fromJava(jniEnv, j); }

    const djinni::GlobalRef<jclass> clazz { djinni::jniFindClass("org/rocketspeed/MessageReceivedCallback") };
    const jmethodID method_Call { djinni::jniGetMethodID(clazz.get(), "Call", "(Lorg/rocketspeed/MessageReceived;)V") };

    class JavaProxy final : djinni::JavaProxyCacheEntry, public ::rocketglue::MessageReceivedCallback {
    public:
        JavaProxy(jobject obj);
        virtual void Call(const std::shared_ptr<::rocketglue::MessageReceived> & message_received) override;

    private:
        using djinni::JavaProxyCacheEntry::getGlobalRef;
        friend class djinni::JniInterfaceJavaExt<::rocketglue::MessageReceivedCallback, ::djinni_generated::NativeMessageReceivedCallback>;
        friend class djinni::JavaProxyCache<JavaProxy>;
    };

private:
    NativeMessageReceivedCallback();
    friend class djinni::JniClass<::djinni_generated::NativeMessageReceivedCallback>;
};

}  // namespace djinni_generated
