// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSHostId+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSHostId

- (id)initWithHostId:(RSHostId *)HostId
{
    if (self = [super init]) {
        _hostname = [HostId.hostname copy];
        _port = HostId.port;
    }
    return self;
}

- (id)initWithHostname:(NSString *)hostname port:(int32_t)port
{
    if (self = [super init]) {
        _hostname = [hostname copy];
        _port = port;
    }
    return self;
}

- (id)initWithCppHostId:(const ::rocketglue::HostId &)HostId
{
    if (self = [super init]) {
        _hostname = [[NSString alloc] initWithBytes:HostId.hostname.data()
                length:HostId.hostname.length()
                encoding:NSUTF8StringEncoding];
        _port = HostId.port;
    }
    return self;
}

- (::rocketglue::HostId)cppHostId
{
    std::string hostname([_hostname UTF8String], [_hostname lengthOfBytesUsingEncoding:NSUTF8StringEncoding]);
    int32_t port = _port;
    return ::rocketglue::HostId(
            std::move(hostname),
            std::move(port));
}

@end
