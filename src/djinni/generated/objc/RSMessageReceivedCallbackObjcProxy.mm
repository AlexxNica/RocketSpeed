// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSMessageReceivedCallbackObjcProxy+Private.h"
#import "RSMessageReceivedCallback.h"
#import "RSMessageReceivedCppProxy+Private.h"

namespace rocketglue
{
    MessageReceivedCallbackObjcProxy::MessageReceivedCallbackObjcProxy (id objcRef)
    {
        assert([[objcRef class] conformsToProtocol:@protocol(RSMessageReceivedCallback)]);
        this->objcRef = objcRef;
    }

    MessageReceivedCallbackObjcProxy::~MessageReceivedCallbackObjcProxy ()
    {
        djinni::DbxObjcWrapperCache<MessageReceivedCallbackObjcProxy> & cache = djinni::DbxObjcWrapperCache<MessageReceivedCallbackObjcProxy>::getInstance();
        cache.remove(objcRef);
    }

    std::shared_ptr<::rocketglue::MessageReceivedCallback> MessageReceivedCallbackObjcProxy::MessageReceivedCallback_with_objc (id objcRef)
    {
        djinni::DbxObjcWrapperCache<MessageReceivedCallbackObjcProxy> & cache = djinni::DbxObjcWrapperCache<MessageReceivedCallbackObjcProxy>::getInstance();
        return static_cast<std::shared_ptr<::rocketglue::MessageReceivedCallback>>(cache.get(objcRef));
    }

    void MessageReceivedCallbackObjcProxy::Call (const std::shared_ptr<::rocketglue::MessageReceived> & message_received)
    {
        id <RSMessageReceived> cpp_message_received = [RSMessageReceivedCppProxy MessageReceivedWithCpp:message_received];
        [objcRef Call:cpp_message_received];
    }
}
