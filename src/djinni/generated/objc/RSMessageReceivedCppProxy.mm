// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSMessageReceivedCppProxy+Private.h"
#import "DJIError.h"
#import "RSMessageReceived.h"
#import "RSSequenceNumber+Private.h"
#import "RSTopic+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSMessageReceivedCppProxy

- (id)initWithCpp:(const std::shared_ptr<::rocketglue::MessageReceived> &)cppRef
{
    if (self = [super init]) {
        _cppRef = cppRef;
    }
    return self;
}

- (void)dealloc
{
    djinni::DbxCppWrapperCache<::rocketglue::MessageReceived> & cache = djinni::DbxCppWrapperCache<::rocketglue::MessageReceived>::getInstance();
    cache.remove(_cppRef);
}

+ (id)MessageReceivedWithCpp:(const std::shared_ptr<::rocketglue::MessageReceived> &)cppRef
{
    djinni::DbxCppWrapperCache<::rocketglue::MessageReceived> & cache = djinni::DbxCppWrapperCache<::rocketglue::MessageReceived>::getInstance();
    return cache.get(cppRef, [] (const std::shared_ptr<::rocketglue::MessageReceived> & p) { return [[RSMessageReceivedCppProxy alloc] initWithCpp:p]; });
}

- (RSSequenceNumber *)GetSequenceNumber {
    try {
        ::rocketglue::SequenceNumber cppRet = _cppRef->GetSequenceNumber();
        RSSequenceNumber *objcRet = [[RSSequenceNumber alloc] initWithCppSequenceNumber:cppRet];
        return objcRet;
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (RSTopic *)GetTopicName {
    try {
        ::rocketglue::Topic cppRet = _cppRef->GetTopicName();
        RSTopic *objcRet = [[RSTopic alloc] initWithCppTopic:cppRet];
        return objcRet;
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (NSData *)GetContents {
    try {
        std::vector<uint8_t> cppRet = _cppRef->GetContents();
        NSData *objcRet = [NSData dataWithBytes:(&cppRet[0]) length:(cppRet.size())];
        return objcRet;
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

@end
