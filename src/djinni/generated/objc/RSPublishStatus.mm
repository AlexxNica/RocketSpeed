// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSPublishStatus+Private.h"
#import "RSMsgId+Private.h"
#import "RSStatus+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSPublishStatus

- (id)initWithPublishStatus:(RSPublishStatus *)PublishStatus
{
    if (self = [super init]) {
        _status = [[RSStatus alloc] initWithStatus:PublishStatus.status];
        _msgid = [[RSMsgId alloc] initWithMsgId:PublishStatus.msgid];
    }
    return self;
}

- (id)initWithStatus:(RSStatus *)status msgid:(RSMsgId *)msgid
{
    if (self = [super init]) {
        _status = status;
        _msgid = msgid;
    }
    return self;
}

- (id)initWithCppPublishStatus:(const ::rocketglue::PublishStatus &)PublishStatus
{
    if (self = [super init]) {
        _status = [[RSStatus alloc] initWithCppStatus:PublishStatus.status];
        _msgid = [[RSMsgId alloc] initWithCppMsgId:PublishStatus.msgid];
    }
    return self;
}

- (::rocketglue::PublishStatus)cppPublishStatus
{
    ::rocketglue::Status status = std::move([_status cppStatus]);
    ::rocketglue::MsgId msgid = std::move([_msgid cppMsgId]);
    return ::rocketglue::PublishStatus(
            std::move(status),
            std::move(msgid));
}

@end
