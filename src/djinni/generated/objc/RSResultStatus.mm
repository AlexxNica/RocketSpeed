// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSResultStatus+Private.h"
#import "RSMsgId+Private.h"
#import "RSSequenceNumber+Private.h"
#import "RSStatus+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSResultStatus

- (id)initWithResultStatus:(RSResultStatus *)ResultStatus
{
    if (self = [super init]) {
        _status = [[RSStatus alloc] initWithStatus:ResultStatus.status];
        _msgid = [[RSMsgId alloc] initWithMsgId:ResultStatus.msgid];
        _seqno = [[RSSequenceNumber alloc] initWithSequenceNumber:ResultStatus.seqno];
    }
    return self;
}

- (id)initWithStatus:(RSStatus *)status msgid:(RSMsgId *)msgid seqno:(RSSequenceNumber *)seqno
{
    if (self = [super init]) {
        _status = status;
        _msgid = msgid;
        _seqno = seqno;
    }
    return self;
}

- (id)initWithCppResultStatus:(const ::rocketglue::ResultStatus &)ResultStatus
{
    if (self = [super init]) {
        _status = [[RSStatus alloc] initWithCppStatus:ResultStatus.status];
        _msgid = [[RSMsgId alloc] initWithCppMsgId:ResultStatus.msgid];
        _seqno = [[RSSequenceNumber alloc] initWithCppSequenceNumber:ResultStatus.seqno];
    }
    return self;
}

- (::rocketglue::ResultStatus)cppResultStatus
{
    ::rocketglue::Status status = std::move([_status cppStatus]);
    ::rocketglue::MsgId msgid = std::move([_msgid cppMsgId]);
    ::rocketglue::SequenceNumber seqno = std::move([_seqno cppSequenceNumber]);
    return ::rocketglue::ResultStatus(
            std::move(status),
            std::move(msgid),
            std::move(seqno));
}

@end
