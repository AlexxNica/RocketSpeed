// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSSequenceNumber+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSSequenceNumber

- (id)initWithSequenceNumber:(RSSequenceNumber *)SequenceNumber
{
    if (self = [super init]) {
        _seqno = SequenceNumber.seqno;
    }
    return self;
}

- (id)initWithSeqno:(int64_t)seqno
{
    if (self = [super init]) {
        _seqno = seqno;
    }
    return self;
}

- (id)initWithCppSequenceNumber:(const ::rocketglue::SequenceNumber &)SequenceNumber
{
    if (self = [super init]) {
        _seqno = SequenceNumber.seqno;
    }
    return self;
}

- (::rocketglue::SequenceNumber)cppSequenceNumber
{
    int64_t seqno = _seqno;
    return ::rocketglue::SequenceNumber(
            std::move(seqno));
}

@end
