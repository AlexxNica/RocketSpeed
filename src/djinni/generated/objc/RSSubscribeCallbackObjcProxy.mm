// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSSubscribeCallbackObjcProxy+Private.h"
#import "RSSubscribeCallback.h"
#import "RSSubscriptionStatus+Private.h"

namespace rocketglue
{
    SubscribeCallbackObjcProxy::SubscribeCallbackObjcProxy (id objcRef)
    {
        assert([[objcRef class] conformsToProtocol:@protocol(RSSubscribeCallback)]);
        this->objcRef = objcRef;
    }

    SubscribeCallbackObjcProxy::~SubscribeCallbackObjcProxy ()
    {
        djinni::DbxObjcWrapperCache<SubscribeCallbackObjcProxy> & cache = djinni::DbxObjcWrapperCache<SubscribeCallbackObjcProxy>::getInstance();
        cache.remove(objcRef);
    }

    std::shared_ptr<::rocketglue::SubscribeCallback> SubscribeCallbackObjcProxy::SubscribeCallback_with_objc (id objcRef)
    {
        djinni::DbxObjcWrapperCache<SubscribeCallbackObjcProxy> & cache = djinni::DbxObjcWrapperCache<SubscribeCallbackObjcProxy>::getInstance();
        return static_cast<std::shared_ptr<::rocketglue::SubscribeCallback>>(cache.get(objcRef));
    }

    void SubscribeCallbackObjcProxy::Call (const ::rocketglue::SubscriptionStatus & subscription_status)
    {
        RSSubscriptionStatus *cpp_subscription_status = [[RSSubscriptionStatus alloc] initWithCppSubscriptionStatus:subscription_status];
        [objcRef Call:cpp_subscription_status];
    }
}
