// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from rocketspeed.djinni

#import "RSTopic+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation RSTopic

- (id)initWithTopic:(RSTopic *)Topic
{
    if (self = [super init]) {
        _name = [Topic.name copy];
    }
    return self;
}

- (id)initWithName:(NSString *)name
{
    if (self = [super init]) {
        _name = [name copy];
    }
    return self;
}

- (id)initWithCppTopic:(const ::rocketglue::Topic &)Topic
{
    if (self = [super init]) {
        _name = [[NSString alloc] initWithBytes:Topic.name.data()
                length:Topic.name.length()
                encoding:NSUTF8StringEncoding];
    }
    return self;
}

- (::rocketglue::Topic)cppTopic
{
    std::string name([_name UTF8String], [_name lengthOfBytesUsingEncoding:NSUTF8StringEncoding]);
    return ::rocketglue::Topic(
            std::move(name));
}

@end
